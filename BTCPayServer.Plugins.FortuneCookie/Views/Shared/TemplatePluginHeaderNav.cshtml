@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Plugins.Template.Views
@using Microsoft.AspNetCore.Mvc.TagHelpers

<li class="nav-item">
    <a asp-controller="UIPlugin" asp-action="Index" class="nav-link @ViewData.IsActivePage(PluginNavPages.Index)">
        <svg role="img" class="icon icon-plugin" viewBox="0 0 24 24" fill="none">
            <path
                d="M12.0002 10.2354L4.73633 7.38747M12.0002 10.2354L19.2642 7.38747M12.0002 10.2354V19.5M5.21166 7.01614L11.2783 4.6375C11.7412 4.45417 12.2566 4.45417 12.7196 4.6375L18.7862 7.01614C19.0023 7.1083 19.1858 7.26312 19.3131 7.46062C19.4404 7.65812 19.5055 7.88923 19.5002 8.12413V15.876C19.5058 16.1106 19.441 16.3415 19.3142 16.539C19.1874 16.7365 19.0045 16.8915 18.7888 16.984L12.7222 19.3633C12.259 19.5453 11.7441 19.5453 11.2809 19.3633L5.21433 16.984C4.9982 16.8919 4.81466 16.737 4.68739 16.5395C4.56012 16.342 4.49496 16.1109 4.50033 15.876V8.12413C4.49475 7.88953 4.55951 7.65864 4.68628 7.46117C4.81305 7.26371 4.99603 7.10871 5.21166 7.01614Z"
                stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
        <span>Fortune Cookie Plugin</span>
    </a>
</li>

@*Fortune Cookie UI view for users*@
<div>
    <div>
        <img src="/Resources/img/cypher_fortune.jpg" alt="Fortune" style="width:200px; height:200px; object-fit:cover"
            asp-append-version="true">
    </div>
    <div>
        <h2>Fortune Cookie</h2>
        @*UI window to display before user opens*@
        <div id="closedState">
            <h5>
                Satoshi offers you this fortune as a thanks for using BTCPay Server
            </h5>
            <button id="openButton">Open</button>
        </div>
        @*UI window to display after user opens*@
        <div id="openState" style="display: none;">
            <h5 id="fortuneText"></h5>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const openButton = document.getElementById('openButton');
            const closedState = document.getElementById('closedState');
            const openState = document.getElementById('openState');
            const fortuneText = document.getElementById('fortuneText');

            let fortunes = [];

            try {
                const response = await fetch('/Resources/fortunes.csv');
                if (!response.ok) {
                    throw error('Failed to load fortunes.');
                } else {
                    const text = await response.text();
                    fortunes = text.split('\n').map(line => line.trim()).filter(line => line.length > 0);
                }
            } catch (e) {
                throw error('Error fetching fortunes:', e);
            }

            openButton.addEventListener('click', () => {
                if (fortunes.length === 0) {
                    fortuneText.textContent = 'No fortunes available.';
                } else {
                    const randomIndex = Math.floor(Math.random() * fortunes.length);
                    fortuneText.textContent = fortunes[randomIndex];
                }

                closedState.style.display = 'none';
                openState.style.display = 'block';

                setTimeout(() => {
                    openState.style.display = 'none';
                    closedState.style.display = 'block';
                }, 5000); // Return to closed state after 5 seconds
            });
        })
    </script>
}